#!/usr/bin/env bash

# MIT license (c) 2022 https://github.com/slowpeek
# Homepage: https://github.com/slowpeek/hddtemp

set -eu
shopt -s nullglob

# A very basic replacement for hddtemp tool missing from Ubuntu
# 22.04. It requires smartctl (smartmontools package).

SCRIPT_VERSION=0.1+git
SCRIPT_SELF=${BASH_SOURCE[0]##*/}

bye() {
    echo "$@" >&2
    exit 1
}

version() {
    echo "$SCRIPT_SELF $SCRIPT_VERSION"
    exit
}

usage() {
    cat <<EOF
USAGE --

${SCRIPT_SELF}
    show temps for all sd and nvme disks

${SCRIPT_SELF} /dev/sda ...
    show temps for selected disks

Options:
-h, --help                 Show usage
-V, --version              Show version

Homepage https://github.com/slowpeek/hddtemp
EOF

    exit
}

temp_ata() {
    local line

    for line; do
        if [[ $line == *'Temperature_Celsius'* ]]; then
            read -r _ _ _ _ _ _ _ _ _ temp <<< "$line"
            break
        fi
    done
}

temp_nvme() {
    local line

    for line; do
        if [[ $line == 'Temperature:'* ]]; then
            read -r _ temp <<< "$line"
            break
        fi
    done
}

temp_scsi() {
    local line

    for line; do
        if [[ $line == 'Current Drive Temperature:'* ]]; then
            read -r _ _ _ temp <<< "$line"
            break
        fi
    done
}

main() {
    local opts

    # jetopt hhelp Vversion
    opts=$(getopt -o hV -l help,version -- "$@") || exit
    eval set -- "$opts"

    while (( $# )); do
        case $1 in
            -h|--help)
                usage ;;
            -V|--version)
                version ;;
            --)
                shift
                break ;;
        esac
    done

    type -P smartctl &>/dev/null || bye 'smartctl is not available'
    (( EUID )) && bye 'smartctl requires root permissions, run with sudo'

    # If no args supplied, assume all sd and nvme disks.
    (( $# )) || set -- /dev/sd? /dev/nvme?n?

    local items=() l1=0 l2=1
    local disk name temp lines line n
    for disk; do
        [[ $disk == /dev/* ]] || continue

        name=
        temp=

        readarray -t lines < <(smartctl -i -A "$disk" 2>&1)

        # There are three printers in smartctl overall: ataprint,
        # nvmeprint, scsiprint. Leverage the output formats
        # peculiarities.

        n=0
        for line in "${lines[@]}"; do
            ((++n))

            case $line in
                'Device Model:'*)
                    read -r _ _ name <<< "$line"
                    temp_ata "${lines[@]:n}"
                    break ;;
                'Model Number:'*)
                    read -r _ _ name <<< "$line"
                    temp_nvme "${lines[@]:n}"
                    break ;;
                'Product:'*)
                    read -r _ name <<< "$line"
                    temp_scsi "${lines[@]:n}"
                    break ;;
            esac
        done

        # Only keep the first number.
        # Sample values: '31 (Min/Max 0/59)', '29 C'
        [[ -z ${temp-} ]] || temp=${temp%%[^0-9]*}

        # Collect max width of values.
        (( ${#disk} > l1 )) && l1=${#disk}
        (( ${#name} > l2 )) && l2=${#name}

        items+=("$disk:" "${name:-?}" "${temp:-?}")
    done

    printf "%-$((l1+1))s  %-${l2}s  %s\n" "${items[@]}"
}

[[ ${BASH_SOURCE[0]} == "$0" ]] && main "$@"
